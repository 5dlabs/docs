apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rust-docs-mcp-server.fullname" . }}
  labels:
    {{- include "rust-docs-mcp-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rust-docs-mcp-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rust-docs-mcp-server.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rust-docs-mcp-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "rust-docs-mcp-server.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["http_server"]
          args:
            {{- range .Values.app.args }}
            - {{ . | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.app.env.PORT | default 3000 }}
              protocol: TCP
          env:
            # Database configuration
            - name: MCPDOCS_DATABASE_URL
              value: {{ include "rust-docs-mcp-server.databaseUrl" . | quote }}

            # Application environment variables
            {{- range $key, $value := .Values.app.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

            # API keys from secrets
            {{- if or .Values.app.secrets.openaiApiKey (not .Values.app.existingSecret) }}
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "rust-docs-mcp-server.secretName" . }}
                  key: openai-api-key
                  optional: true
            {{- end }}

            {{- if or .Values.app.secrets.voyageApiKey (not .Values.app.existingSecret) }}
            - name: VOYAGE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "rust-docs-mcp-server.secretName" . }}
                  key: voyage-api-key
                  optional: true
            {{- end }}

            {{- if and (not .Values.postgresql.enabled) .Values.externalDatabase.existingSecret }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret }}
                  key: {{ .Values.externalDatabase.existingSecretPasswordKey | default "password" }}
            {{- end }}

          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}